/**
 * Express Payments APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { lazy, object, optional, Schema, string } from '../schema.js';
import {
  AdditionalAmountsCardNotPresent,
  additionalAmountsCardNotPresentSchema,
} from './additionalAmountsCardNotPresent.js';
import {
  PaymentMethodOptionsAssociatedWithNonCreditOrDebitMethods,
  paymentMethodOptionsAssociatedWithNonCreditOrDebitMethodsSchema,
} from './paymentMethodOptionsAssociatedWithNonCreditOrDebitMethods.js';
import {
  PlainGiftCardDataInstrumentClear,
  plainGiftCardDataInstrumentClearSchema,
} from './plainGiftCardDataInstrumentClear.js';

/** Information from the Merchant Gift Card. */
export interface EComMerchantClosedLoopGiftCardPaymentMethod {
  /** Value indicating the specific type instance for this field. */
  type: string;
  /** Manner in which the gift card data is presented. */
  instrument: PlainGiftCardDataInstrumentClear;
  /** Other (optional) amounts that are included in the Total Authorization Amount, for card not present transactions */
  otherAmounts?: AdditionalAmountsCardNotPresent;
  /** Options for handling the authorization request */
  options?: PaymentMethodOptionsAssociatedWithNonCreditOrDebitMethods;
}

export const eComMerchantClosedLoopGiftCardPaymentMethodSchema: Schema<EComMerchantClosedLoopGiftCardPaymentMethod> = object(
  {
    type: ['type', string()],
    instrument: [
      'instrument',
      lazy(() => plainGiftCardDataInstrumentClearSchema),
    ],
    otherAmounts: [
      'otherAmounts',
      optional(lazy(() => additionalAmountsCardNotPresentSchema)),
    ],
    options: [
      'options',
      optional(
        lazy(
          () => paymentMethodOptionsAssociatedWithNonCreditOrDebitMethodsSchema
        )
      ),
    ],
  }
);
