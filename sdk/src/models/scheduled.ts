/**
 * Express Payments APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  bigint,
  number,
  optional,
  Schema,
  string,
  typedExpandoObject,
  unknown,
} from '../schema.js';
import {
  ScheduledPaymentsRunInterval,
  scheduledPaymentsRunIntervalSchema,
} from './scheduledPaymentsRunInterval.js';

/** Polymorphic reference for scheduled payment data */
export interface Scheduled {
  /** Value indicating the specific type instance for this field. */
  type: string;
  /** Date in YYYY-MM-DD format on which the payment (or initial, if multiple) will be run */
  startDate: string;
  /** Number of times the schedule should be run, if frequency is not set to oneTimeFuture. If omitted and frequency is not oneTimeFuture, the schedule will run until explicitly deleted. */
  numberOfPayments?: number;
  /** Scheduled Payments Run interval */
  interval: ScheduledPaymentsRunInterval;
  /** Multiplier against which the interval will be assessed; example: when interval = monthly and multiplier = 3, the payment will be run every 3 months. */
  multiplier?: number;
  /** Amount value in minor currency units with no decimal point. For example, $1.00 would be written as 100. */
  scheduleAmount: bigint;
  additionalProperties?: Record<string, unknown>;
}

export const scheduledSchema: Schema<Scheduled> = typedExpandoObject(
  {
    type: ['type', string()],
    startDate: ['startDate', string()],
    numberOfPayments: ['numberOfPayments', optional(number())],
    interval: ['interval', scheduledPaymentsRunIntervalSchema],
    multiplier: ['multiplier', optional(number())],
    scheduleAmount: ['scheduleAmount', bigint()],
  },
  'additionalProperties',
  optional(unknown())
);
