/**
 * Express Payments APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  boolean,
  lazy,
  optional,
  Schema,
  string,
  typedExpandoObject,
  unknown,
} from '../schema.js';
import {
  AmountWithCurrency1,
  amountWithCurrency1Schema,
} from './amountWithCurrency1.js';
import {
  PaymentMethodResponseAuth,
  paymentMethodResponseAuthSchema,
} from './containers/paymentMethodResponseAuth.js';
import {
  CreatePaymentResponseActions,
  createPaymentResponseActionsSchema,
} from './createPaymentResponseActions.js';
import { Links, linksSchema } from './links.js';

/** Response payload for payment creation requests. */
export interface CreatePaymentResponse {
  /** Unique reference generated by you that is used to identify a payment throughout its lifecycle. */
  reference?: string;
  /** Globally unique identifer defined by Worldpay. */
  paymentId?: string;
  /** Globally unique identifer defined by Worldpay. */
  commandId?: string;
  /** Globally unique identifer defined by Worldpay. */
  captureId?: string;
  /** Outcome of the request; one of the following: authorized | partially authorized | refused | captured | partially captured */
  outcome: string;
  /** Date and time, conforming to the ISO-8601 specification, that the transaction was received and processed.. */
  dateTime: string;
  /** the value and currency */
  amount?: AmountWithCurrency1;
  /** Optional flag indicating that the payment creation request was approved for an amount lower than what was requested; only possible if partial approval was requested. */
  partialApproval?: boolean;
  /** Response data specific to the payment method. */
  paymentMethod?: PaymentMethodResponseAuth;
  /** Globally unique identifer defined by Worldpay. */
  scheduleId?: string;
  /** HATEOAS links for response payloads. */
  links?: Links;
  actions?: CreatePaymentResponseActions;
  additionalProperties?: Record<string, unknown>;
}

export const createPaymentResponseSchema: Schema<CreatePaymentResponse> = typedExpandoObject(
  {
    reference: ['reference', optional(string())],
    paymentId: ['paymentId', optional(string())],
    commandId: ['commandId', optional(string())],
    captureId: ['captureId', optional(string())],
    outcome: ['outcome', string()],
    dateTime: ['dateTime', string()],
    amount: ['amount', optional(lazy(() => amountWithCurrency1Schema))],
    partialApproval: ['partialApproval', optional(boolean())],
    paymentMethod: ['paymentMethod', optional(paymentMethodResponseAuthSchema)],
    scheduleId: ['scheduleId', optional(string())],
    links: ['_links', optional(lazy(() => linksSchema))],
    actions: [
      '_actions',
      optional(lazy(() => createPaymentResponseActionsSchema)),
    ],
  },
  'additionalProperties',
  optional(unknown())
);
