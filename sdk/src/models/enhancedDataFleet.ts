/**
 * Express Payments APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { array, lazy, object, optional, Schema, string } from '../schema.js';
import { FleetAmounts, fleetAmountsSchema } from './fleetAmounts.js';
import { FleetCustomer, fleetCustomerSchema } from './fleetCustomer.js';
import { FleetProduct, fleetProductSchema } from './fleetProduct.js';
import {
  FleetRestrictionIndicator,
  fleetRestrictionIndicatorSchema,
} from './fleetRestrictionIndicator.js';
import {
  FleetServiceType,
  fleetServiceTypeSchema,
} from './fleetServiceType.js';

/** Data associated with Fleet Card Transactions */
export interface EnhancedDataFleet {
  type: string;
  /** Timestamp for the transaction in UTC. */
  transactionTimeStampUtc?: string;
  /** Oil Company Name. */
  oilCompanyName?: string;
  /**
   * The type of service being used with a Fleet Card.
   * <br>
   *   **Possible Values:**
   *   | Value | Description |
   *   | ----- | ------------|
   *   | S | Self Service. |
   *   | F | Full Service. |
   *   | O | Other. |
   *   | N | Mini Service. |
   *   | X | Max Service. |
   */
  serviceType?: FleetServiceType;
  /** This object contains customer data for the Fleet transaction. */
  customer?: FleetCustomer;
  /** This object contains amount information for the Fleet transaction. */
  amounts?: FleetAmounts;
  productsData?: FleetProduct[];
  /** Purchase Order No. */
  purchaseOrderNo?: string;
  /** Purchase Order ReferenceNo. */
  purchaseOrderRefNo?: string;
  /** Authorization Source. */
  authorizatonSource?: string;
  /** Invoice Number. */
  invoiceNumber?: string;
  /** Restriction Code. */
  restrictionCode?: string;
  /**
   * Flag that is used to allow Visa 2.0 Fleet merchants to indicate what controls they can support at their POS.
   * <br>
   *   **Possible Values:**
   *   | Value | Description |
   *   | ----- | ------------|
   *   | 1 | Chip-Based Restrictions. |
   *   | 2 | Host-Based Restrictions. |
   *   | 3 | Both Chip-and Host Based. |
   */
  visaFleetRestrictionIndicator?: FleetRestrictionIndicator;
}

export const enhancedDataFleetSchema: Schema<EnhancedDataFleet> = object({
  type: ['type', string()],
  transactionTimeStampUtc: ['transactionTimeStampUTC', optional(string())],
  oilCompanyName: ['oilCompanyName', optional(string())],
  serviceType: ['serviceType', optional(fleetServiceTypeSchema)],
  customer: ['customer', optional(lazy(() => fleetCustomerSchema))],
  amounts: ['amounts', optional(lazy(() => fleetAmountsSchema))],
  productsData: [
    'productsData',
    optional(array(lazy(() => fleetProductSchema))),
  ],
  purchaseOrderNo: ['purchaseOrderNo', optional(string())],
  purchaseOrderRefNo: ['purchaseOrderRefNo', optional(string())],
  authorizatonSource: ['authorizatonSource', optional(string())],
  invoiceNumber: ['invoiceNumber', optional(string())],
  restrictionCode: ['restrictionCode', optional(string())],
  visaFleetRestrictionIndicator: [
    'visaFleetRestrictionIndicator',
    optional(fleetRestrictionIndicatorSchema),
  ],
});
