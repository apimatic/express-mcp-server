/**
 * Express Payments APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { bigint, number, object, optional, Schema, string } from '../schema.js';

/** This object contains amount information for the Fleet transaction. */
export interface FleetAmounts {
  /** Amount value in minor currency units with no decimal point. For example, $1.00 would be written as 100. */
  merchantDiscountAmount?: bigint;
  /** Amount value in minor currency units with no decimal point. For example, $1.00 would be written as 100. */
  participantDiscountAmount?: bigint;
  /** Amount value in minor currency units with no decimal point. For example, $1.00 would be written as 100. */
  nonFuelSalesTaxAmount?: bigint;
  /** Amount value in minor currency units with no decimal point. For example, $1.00 would be written as 100. */
  grossFuelAmount?: bigint;
  /** VISA VAT Tax Rate - VAT or tax rate (in percentage) for fuel purchased. For example  Two decimal places are implied. 5% would be written as 500 */
  vatTaxRate?: number;
  /** Customer's VAT Registration Number. */
  vatRegistrationNumber?: string;
  /** Amount value in minor currency units with no decimal point. For example, $1.00 would be written as 100. */
  grossNonFuelAmount?: bigint;
  /** Amount value in minor currency units with no decimal point. For example, $1.00 would be written as 100. */
  netNonFuelAmount?: bigint;
}

export const fleetAmountsSchema: Schema<FleetAmounts> = object({
  merchantDiscountAmount: ['merchantDiscountAmount', optional(bigint())],
  participantDiscountAmount: ['participantDiscountAmount', optional(bigint())],
  nonFuelSalesTaxAmount: ['nonFuelSalesTaxAmount', optional(bigint())],
  grossFuelAmount: ['grossFuelAmount', optional(bigint())],
  vatTaxRate: ['vatTaxRate', optional(number())],
  vatRegistrationNumber: ['vatRegistrationNumber', optional(string())],
  grossNonFuelAmount: ['grossNonFuelAmount', optional(bigint())],
  netNonFuelAmount: ['netNonFuelAmount', optional(bigint())],
});
