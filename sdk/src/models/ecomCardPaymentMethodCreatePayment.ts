/**
 * Express Payments APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  lazy,
  optional,
  Schema,
  string,
  typedExpandoObject,
  unknown,
} from '../schema.js';
import {
  AdditionalAmountsCardNotPresent,
  additionalAmountsCardNotPresentSchema,
} from './additionalAmountsCardNotPresent.js';
import {
  CardPaymentMethodOptions,
  cardPaymentMethodOptionsSchema,
} from './cardPaymentMethodOptions.js';
import {
  CustomerAgreement,
  customerAgreementSchema,
} from './containers/customerAgreement.js';
import {
  EcomCardInstruments,
  ecomCardInstrumentsSchema,
} from './containers/ecomCardInstruments.js';
import { Threeds, threedsSchema } from './containers/threeds.js';
import { TokenCreate, tokenCreateSchema } from './containers/tokenCreate.js';

/** Ecom card payment method */
export interface EcomCardPaymentMethodCreatePayment {
  /** Value indicating the specific type instance for this field. */
  type: string;
  /** Identifies **HOW** (ex Keyed, Swiped, Inserted or Tapped) the customer is providing the card information. */
  instrument: EcomCardInstruments;
  /** Other (optional) amounts that are included in the Total Authorization Amount, for card not present transactions */
  otherAmounts?: AdditionalAmountsCardNotPresent;
  /** Options for handling the authorization request */
  options?: CardPaymentMethodOptions;
  /** Create a token for use in future payments */
  createToken?: TokenCreate;
  /** An object containing 3DS authentication preferences and customer data */
  threeDs?: Threeds;
  /** Setup an initial agreement (__first__) to store a customers payment details and make __subsequent__  payments when __storing a card__, for __subscriptions__, __installments__, __scheduled__, and __unscheduled__ payments */
  customerAgreement?: CustomerAgreement;
  additionalProperties?: Record<string, unknown>;
}

export const ecomCardPaymentMethodCreatePaymentSchema: Schema<EcomCardPaymentMethodCreatePayment> = typedExpandoObject(
  {
    type: ['type', string()],
    instrument: ['instrument', ecomCardInstrumentsSchema],
    otherAmounts: [
      'otherAmounts',
      optional(lazy(() => additionalAmountsCardNotPresentSchema)),
    ],
    options: ['options', optional(lazy(() => cardPaymentMethodOptionsSchema))],
    createToken: ['createToken', optional(tokenCreateSchema)],
    threeDs: ['threeDs', optional(threedsSchema)],
    customerAgreement: ['customerAgreement', optional(customerAgreementSchema)],
  },
  'additionalProperties',
  optional(unknown())
);
