/**
 * Express Payments APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  boolean,
  number,
  optional,
  Schema,
  string,
  typedExpandoObject,
  unknown,
} from '../schema.js';
import {
  ScheduledPaymentsRunInterval,
  scheduledPaymentsRunIntervalSchema,
} from './scheduledPaymentsRunInterval.js';

/** Payment scheduling parameters */
export interface ScheduledPayment {
  /** Date in YYYY-MM-DD format on which the payment (or initial, if multiple) will be run. */
  startDate?: string;
  /** Number of times the schedule should be run, if interval is not set to oneTimeFuture. If omitted and frequency is not oneTimeFuture, the schedule will run until explicitly deleted. */
  numberOfPayments?: number;
  /** Scheduled Payments Run interval */
  interval?: ScheduledPaymentsRunInterval;
  /** Multiplier against which the interval will be assessed; example: when interval = monthly and multiplier = 3, the payment will be run every 3 months. */
  multiplier?: number;
  /** Set to false to deactivate a recurring payment schedule but leave in place; set to true to active a currently deactivated schedule */
  active?: boolean;
  additionalProperties?: Record<string, unknown>;
}

export const scheduledPaymentSchema: Schema<ScheduledPayment> = typedExpandoObject(
  {
    startDate: ['startDate', optional(string())],
    numberOfPayments: ['numberOfPayments', optional(number())],
    interval: ['interval', optional(scheduledPaymentsRunIntervalSchema)],
    multiplier: ['multiplier', optional(number())],
    active: ['active', optional(boolean())],
  },
  'additionalProperties',
  optional(unknown())
);
