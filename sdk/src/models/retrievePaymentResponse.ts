/**
 * Express Payments APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  lazy,
  number,
  optional,
  Schema,
  string,
  typedExpandoObject,
  unknown,
} from '../schema.js';
import {
  AmountWithCurrency1,
  amountWithCurrency1Schema,
} from './amountWithCurrency1.js';
import { Balances, balancesSchema } from './balances.js';
import {
  PaymentMethodResponseRetrieval,
  paymentMethodResponseRetrievalSchema,
} from './containers/paymentMethodResponseRetrieval.js';
import {
  RetrievePaymentResponseActions,
  retrievePaymentResponseActionsSchema,
} from './retrievePaymentResponseActions.js';
import {
  RetrievePaymentResponseLinks,
  retrievePaymentResponseLinksSchema,
} from './retrievePaymentResponseLinks.js';

/** Response payload for payment retrieval requests. */
export interface RetrievePaymentResponse {
  /** Globally unique identifer defined by Worldpay. */
  paymentId: string;
  /**
   * Current state of the payment; one of the following:
   *  authorized | partially authorized | refused | captured | cancelled | refunded | partially refunded | settled | settlement rejected
   */
  status: string;
  /** Unique reference generated by you that is used to identify a payment throughout its lifecycle. */
  reference?: string;
  /** Date and time, conforming to the ISO-8601 specification, that the transaction was received and processed. */
  dateTime: string;
  /** Response data specific to the payment method. */
  paymentMethod?: PaymentMethodResponseRetrieval;
  /** the value and currency */
  amount: AmountWithCurrency1;
  /** Balances data for response payloads; except where noted, balance amounts (example: _authorizations.approved_) will reflect the original operation performed  and will not be incremented or decremented based on other operations (example: partial cancellation). Interrogate the "total" field to obtain a net balance amount of the payment. */
  balances?: Balances;
  /** Total number of requests (creation and follow-ons) comprising the overall payment resource. */
  totalRequests?: number;
  actions?: RetrievePaymentResponseActions;
  links?: RetrievePaymentResponseLinks;
  additionalProperties?: Record<string, unknown>;
}

export const retrievePaymentResponseSchema: Schema<RetrievePaymentResponse> = typedExpandoObject(
  {
    paymentId: ['paymentId', string()],
    status: ['status', string()],
    reference: ['reference', optional(string())],
    dateTime: ['dateTime', string()],
    paymentMethod: [
      'paymentMethod',
      optional(paymentMethodResponseRetrievalSchema),
    ],
    amount: ['amount', lazy(() => amountWithCurrency1Schema)],
    balances: ['balances', optional(lazy(() => balancesSchema))],
    totalRequests: ['totalRequests', optional(number())],
    actions: [
      '_actions',
      optional(lazy(() => retrievePaymentResponseActionsSchema)),
    ],
    links: ['_links', optional(lazy(() => retrievePaymentResponseLinksSchema))],
  },
  'additionalProperties',
  optional(unknown())
);
