/**
 * Express Payments APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { isMappedValueValidForSchema, oneOf, Schema } from '../../schema.js';
import { AccessToken, accessTokenSchema } from '../accessToken.js';
import { PassToken, passTokenSchema } from '../passToken.js';
import {
  WorldpayOmniToken,
  worldpayOmniTokenSchema,
} from '../worldpayOmniToken.js';

/** This is a container type for one-of types. */
export type TokenResponse = AccessToken | PassToken | WorldpayOmniToken;

const discriminatorMap = {
  'token/access': accessTokenSchema,
  'token/pass': passTokenSchema,
  'token/omni': worldpayOmniTokenSchema,
};

export const tokenResponseSchema: Schema<TokenResponse> = oneOf(
  [accessTokenSchema, passTokenSchema, worldpayOmniTokenSchema],
  discriminatorMap,
  'type'
);

export namespace TokenResponse {
  /**
   * Validation method to narrow down union type to AccessToken type case.
   *
   * This is Access Token case.
   */
  export function isAccessToken(value: unknown): value is AccessToken {
    return isMappedValueValidForSchema(value, accessTokenSchema);
  }

  /**
   * Validation method to narrow down union type to PassToken type case.
   *
   * This is PASS Token case.
   */
  export function isPassToken(value: unknown): value is PassToken {
    return isMappedValueValidForSchema(value, passTokenSchema);
  }

  /**
   * Validation method to narrow down union type to WorldpayOmniToken type case.
   *
   * This is Worldpay OmniToken case.
   */
  export function isWorldpayOmniToken(
    value: unknown
  ): value is WorldpayOmniToken {
    return isMappedValueValidForSchema(value, worldpayOmniTokenSchema);
  }
}
