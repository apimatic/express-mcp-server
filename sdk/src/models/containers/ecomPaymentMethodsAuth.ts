/**
 * Express Payments APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { isMappedValueValidForSchema, oneOf, Schema } from '../../schema.js';
import {
  AchPaymentMethod,
  achPaymentMethodSchema,
} from '../achPaymentMethod.js';
import {
  EcomCardPaymentMethodCreatePayment,
  ecomCardPaymentMethodCreatePaymentSchema,
} from '../ecomCardPaymentMethodCreatePayment.js';
import {
  EComEbtPaymentMethod,
  eComEbtPaymentMethodSchema,
} from '../eComEbtPaymentMethod.js';
import {
  EComMerchantClosedLoopGiftCardPaymentMethod,
  eComMerchantClosedLoopGiftCardPaymentMethodSchema,
} from '../eComMerchantClosedLoopGiftCardPaymentMethod.js';

/** This is a container type for one-of types. */
export type EcomPaymentMethodsAuth =
  | EcomCardPaymentMethodCreatePayment
  | EComEbtPaymentMethod
  | EComMerchantClosedLoopGiftCardPaymentMethod
  | AchPaymentMethod;

const discriminatorMap = {
  'card': ecomCardPaymentMethodCreatePaymentSchema,
  'ebt': eComEbtPaymentMethodSchema,
  'gift': eComMerchantClosedLoopGiftCardPaymentMethodSchema,
  'ach': achPaymentMethodSchema,
};

export const ecomPaymentMethodsAuthSchema: Schema<EcomPaymentMethodsAuth> = oneOf(
  [
    ecomCardPaymentMethodCreatePaymentSchema,
    eComEbtPaymentMethodSchema,
    eComMerchantClosedLoopGiftCardPaymentMethodSchema,
    achPaymentMethodSchema,
  ],
  discriminatorMap,
  'type'
);

export namespace EcomPaymentMethodsAuth {
  /**
   * Validation method to narrow down union type to EcomCardPaymentMethodCreatePayment type case.
   *
   * This is Ecom Card Payment Method (Create Payment) case.
   */
  export function isEcomCardPaymentMethodCreatePayment(
    value: unknown
  ): value is EcomCardPaymentMethodCreatePayment {
    return isMappedValueValidForSchema(
      value,
      ecomCardPaymentMethodCreatePaymentSchema
    );
  }

  /**
   * Validation method to narrow down union type to EComEbtPaymentMethod type case.
   *
   * This is ECom EBT Payment Method case.
   */
  export function isEComEbtPaymentMethod(
    value: unknown
  ): value is EComEbtPaymentMethod {
    return isMappedValueValidForSchema(value, eComEbtPaymentMethodSchema);
  }

  /**
   * Validation method to narrow down union type to EComMerchantClosedLoopGiftCardPaymentMethod type case.
   *
   * This is ECom Merchant (Closed Loop) Gift Card Payment Method case.
   */
  export function isEComMerchantClosedLoopGiftCardPaymentMethod(
    value: unknown
  ): value is EComMerchantClosedLoopGiftCardPaymentMethod {
    return isMappedValueValidForSchema(
      value,
      eComMerchantClosedLoopGiftCardPaymentMethodSchema
    );
  }

  /**
   * Validation method to narrow down union type to AchPaymentMethod type case.
   *
   * This is ACH payment method case.
   */
  export function isAchPaymentMethod(
    value: unknown
  ): value is AchPaymentMethod {
    return isMappedValueValidForSchema(value, achPaymentMethodSchema);
  }
}
