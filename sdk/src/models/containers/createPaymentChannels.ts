/**
 * Express Payments APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { isMappedValueValidForSchema, oneOf, Schema } from '../../schema.js';
import {
  EcomChannelCreatePayment,
  ecomChannelCreatePaymentSchema,
} from '../ecomChannelCreatePayment.js';
import {
  MotoChannelCreatePayment,
  motoChannelCreatePaymentSchema,
} from '../motoChannelCreatePayment.js';
import {
  PosChannelCreatePayment,
  posChannelCreatePaymentSchema,
} from '../posChannelCreatePayment.js';

/** This is a container type for one-of types. */
export type CreatePaymentChannels =
  | EcomChannelCreatePayment
  | PosChannelCreatePayment
  | MotoChannelCreatePayment;

const discriminatorMap = {
  'ecom': ecomChannelCreatePaymentSchema,
  'pos': posChannelCreatePaymentSchema,
  'moto': motoChannelCreatePaymentSchema,
};

export const createPaymentChannelsSchema: Schema<CreatePaymentChannels> = oneOf(
  [
    ecomChannelCreatePaymentSchema,
    posChannelCreatePaymentSchema,
    motoChannelCreatePaymentSchema,
  ],
  discriminatorMap,
  'type'
);

export namespace CreatePaymentChannels {
  /**
   * Validation method to narrow down union type to EcomChannelCreatePayment type case.
   *
   * This is Ecom Channel (Create Payment) case.
   */
  export function isEcomChannelCreatePayment(
    value: unknown
  ): value is EcomChannelCreatePayment {
    return isMappedValueValidForSchema(value, ecomChannelCreatePaymentSchema);
  }

  /**
   * Validation method to narrow down union type to PosChannelCreatePayment type case.
   *
   * This is POS Channel (Create Payment) case.
   */
  export function isPosChannelCreatePayment(
    value: unknown
  ): value is PosChannelCreatePayment {
    return isMappedValueValidForSchema(value, posChannelCreatePaymentSchema);
  }

  /**
   * Validation method to narrow down union type to MotoChannelCreatePayment type case.
   *
   * This is MOTO Channel (Create Payment) case.
   */
  export function isMotoChannelCreatePayment(
    value: unknown
  ): value is MotoChannelCreatePayment {
    return isMappedValueValidForSchema(value, motoChannelCreatePaymentSchema);
  }
}
