/**
 * Express Payments APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { isMappedValueValidForSchema, oneOf, Schema } from '../../schema.js';
import {
  EnhancedDataFleet,
  enhancedDataFleetSchema,
} from '../enhancedDataFleet.js';
import {
  EnhancedDataLevel2,
  enhancedDataLevel2Schema,
} from '../enhancedDataLevel2.js';
import {
  EnhancedDataLevel3,
  enhancedDataLevel3Schema,
} from '../enhancedDataLevel3.js';

/** This is a container type for one-of types. */
export type EnhancedData =
  | EnhancedDataFleet
  | EnhancedDataLevel2
  | EnhancedDataLevel3;

const discriminatorMap = {
  'fleet': enhancedDataFleetSchema,
  'level2': enhancedDataLevel2Schema,
  'level3': enhancedDataLevel3Schema,
};

export const enhancedDataSchema: Schema<EnhancedData> = oneOf(
  [enhancedDataFleetSchema, enhancedDataLevel2Schema, enhancedDataLevel3Schema],
  discriminatorMap,
  'type'
);

export namespace EnhancedData {
  /**
   * Validation method to narrow down union type to EnhancedDataFleet type case.
   *
   * This is enhancedDataFleet case.
   */
  export function isEnhancedDataFleet(
    value: unknown
  ): value is EnhancedDataFleet {
    return isMappedValueValidForSchema(value, enhancedDataFleetSchema);
  }

  /**
   * Validation method to narrow down union type to EnhancedDataLevel2 type case.
   *
   * This is enhancedDataLevel2 case.
   */
  export function isEnhancedDataLevel2(
    value: unknown
  ): value is EnhancedDataLevel2 {
    return isMappedValueValidForSchema(value, enhancedDataLevel2Schema);
  }

  /**
   * Validation method to narrow down union type to EnhancedDataLevel3 type case.
   *
   * This is enhancedDataLevel3 case.
   */
  export function isEnhancedDataLevel3(
    value: unknown
  ): value is EnhancedDataLevel3 {
    return isMappedValueValidForSchema(value, enhancedDataLevel3Schema);
  }
}
