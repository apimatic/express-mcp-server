/**
 * Express Payments APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { isMappedValueValidForSchema, oneOf, Schema } from '../../schema.js';
import {
  EcomChannelRefund,
  ecomChannelRefundSchema,
} from '../ecomChannelRefund.js';
import {
  MotoChannelRefund,
  motoChannelRefundSchema,
} from '../motoChannelRefund.js';
import {
  PosChannelRefund,
  posChannelRefundSchema,
} from '../posChannelRefund.js';

/** This is a container type for one-of types. */
export type UnreferencedRefundChannels =
  | EcomChannelRefund
  | PosChannelRefund
  | MotoChannelRefund;

const discriminatorMap = {
  'ecom': ecomChannelRefundSchema,
  'pos': posChannelRefundSchema,
  'moto': motoChannelRefundSchema,
};

export const unreferencedRefundChannelsSchema: Schema<UnreferencedRefundChannels> = oneOf(
  [ecomChannelRefundSchema, posChannelRefundSchema, motoChannelRefundSchema],
  discriminatorMap,
  'type'
);

export namespace UnreferencedRefundChannels {
  /**
   * Validation method to narrow down union type to EcomChannelRefund type case.
   *
   * This is Ecom Channel (Refund) case.
   */
  export function isEcomChannelRefund(
    value: unknown
  ): value is EcomChannelRefund {
    return isMappedValueValidForSchema(value, ecomChannelRefundSchema);
  }

  /**
   * Validation method to narrow down union type to PosChannelRefund type case.
   *
   * This is POS Channel (Refund) case.
   */
  export function isPosChannelRefund(
    value: unknown
  ): value is PosChannelRefund {
    return isMappedValueValidForSchema(value, posChannelRefundSchema);
  }

  /**
   * Validation method to narrow down union type to MotoChannelRefund type case.
   *
   * This is MOTO Channel (Refund) case.
   */
  export function isMotoChannelRefund(
    value: unknown
  ): value is MotoChannelRefund {
    return isMappedValueValidForSchema(value, motoChannelRefundSchema);
  }
}
