/**
 * Express Payments APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  lazy,
  optional,
  Schema,
  string,
  typedExpandoObject,
  unknown,
} from '../schema.js';
import {
  AmountWithCurrency,
  amountWithCurrencySchema,
} from './amountWithCurrency.js';
import {
  CreatePaymentChannels,
  createPaymentChannelsSchema,
} from './containers/createPaymentChannels.js';
import { EnhancedData, enhancedDataSchema } from './containers/enhancedData.js';
import { Customer, customerSchema } from './customer.js';
import { MerchantAuth, merchantAuthSchema } from './merchantAuth.js';

/** Create (Authorize) a Payment */
export interface CreatePaymentRequest {
  /** Unique reference generated by you that is used to identify a payment throughout its lifecycle. */
  reference: string;
  /** Identifying information associated with the Merchant submitting the request. */
  merchant: MerchantAuth;
  /** The Total Amount including currency (and optionally a breakdown) associated with this payment or follow-on request */
  amount?: AmountWithCurrency;
  /** Customer address data */
  customer?: Customer;
  /** All payment channels */
  channel: CreatePaymentChannels;
  /** Additional information about the transaction that for certain types of requests can reduce your interchange cost. */
  enhancedData?: EnhancedData;
  additionalProperties?: Record<string, unknown>;
}

export const createPaymentRequestSchema: Schema<CreatePaymentRequest> = typedExpandoObject(
  {
    reference: ['reference', string()],
    merchant: ['merchant', lazy(() => merchantAuthSchema)],
    amount: ['amount', optional(lazy(() => amountWithCurrencySchema))],
    customer: ['customer', optional(lazy(() => customerSchema))],
    channel: ['channel', createPaymentChannelsSchema],
    enhancedData: ['enhancedData', optional(enhancedDataSchema)],
  },
  'additionalProperties',
  optional(unknown())
);
